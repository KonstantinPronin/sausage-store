variables:
  FRONTEND_NOTIFICATION_DATA: |
    {
      "blocks": [
        {
          "type": "section",
          "text": {
            "type": "mrkdwn",
            "text": "Frontend is ready, <$FRONTEND_ARTIFACT_PATH|download artifacts>."
          }
        }
      ]
    }

build-frontend:
  stage: build
  rules:
    - changes:
        - frontend/*
  script:
    - cd frontend
    - npm install
    - npm run build
    - echo "FRONTEND_ARTIFACT_PATH=$CI_JOB_URL/artifacts/download" >> build.env
  artifacts:
    paths:
      - frontend/dist/frontend
    reports:
      dotenv: frontend/build.env

sonarqube-frontend:
  stage: test
  image: sonarsource/sonar-scanner-cli:latest
  script:
    - cd frontend
    - >
      sonar-scanner 
      -Dsonar.qualitygate.wait=true
      -Dsonar.sources=.
      -Dsonar.projectKey=${SONAR_FRONTEND_PROJECT_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONARQUBE_LOGIN}

slack-notification-frontend:
  stage: notify
  needs:
    - build-frontend
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /\[notify]/
      changes:
        - frontend/*
  script:
    - 'curl --request POST --header "Content-type: application/json" --data "$FRONTEND_NOTIFICATION_DATA" "$WEBHOOK_URL"'
