include:
  - template: Security/SAST.gitlab-ci.yml
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'
    
variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  BACKEND_REPORT_ARTIFACTS_URL: $CI_REGISTRY_IMAGE/sausage-report:$VERSION
  BACKEND_REPORT_NOTIFICATION_DATA: |
    {
      "message": "Backend-report #${VERSION} is ready, [download artifacts](${BACKEND_REPORT_ARTIFACTS_URL})."
    }

stages:
  - test
  - build
  - notify
  - deploy

spotbugs-sast:
  stage: test
  rules:
    - changes:
        - backend-report/*

unit-tests:
  stage: test
  rules:
  - changes:
      - backend-report/*  
  image: golang:1.14  
  script:
    - cd backend-report
    - go test ./app/services/health

build-backend-report:
  stage: build
  rules:
    - changes:
        - backend-report/*
  needs:
    - spotbugs-sast
    - unit-tests 
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd backend-report
    - >
      docker build
      --build-arg VERSION=${VERSION}
      --tag $CI_REGISTRY_IMAGE/sausage-report:$VERSION
      .
    - docker push $CI_REGISTRY_IMAGE/sausage-report:$VERSION

slack-notification-backend-report:
  stage: notify
  needs:
    - build-backend-report
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /\[notify]/
      changes:
        - backend-report/*
  script:
    - 'curl --request POST --header "Content-type: application/json" --data "$BACKEND_REPORT_NOTIFICATION_DATA" "$WEBHOOK_URL"'

backend-report-deploy:
  stage: deploy
  needs:
    - build-backend-report
  image: argoproj/argocd:v2.3.3
  rules:
    - changes:
        - backend-report/*
  script:
    - argocd --grpc-web --auth-token $ARGO_TOKEN --server $ARGO_SERVER app set sausage-store-std-011-009 -p backend-report.image.tag=$VERSION
