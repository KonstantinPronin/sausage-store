include:
  - template: Security/SAST.gitlab-ci.yml
  - project: "templates/ci"
    file: "DockerInDockerTemplate.yml"

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  M2_REPO: ${CI_PROJECT_DIR}/.m2/repository
  BACKEND_ARTIFACTS_URL: $CI_REGISTRY_IMAGE/sausage-backend:$VERSION
  BACKEND_NOTIFICATION_DATA: |
    {
      "message": "Backend #${VERSION} is ready, [download artifacts](${BACKEND_ARTIFACTS_URL})."
    }

stages:
  - test
  - build
  - notify
  - deploy

cache:
  paths:
    - ${M2_REPO}

spotbugs-sast:
  stage: test
  rules:
    - changes:
        - backend/*
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 16
    MAVEN_REPO_PATH: ${M2_REPO}

sonarqube-backend:
  stage: test
  rules:
    - changes:
        - backend/*
  image: maven:3.8-openjdk-16
  script:
    - cd backend
    - >
      mvn verify sonar:sonar 
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectName=${SONAR_BACKEND_PROJECT_KEY}
      -Dsonar.projectKey=${SONAR_BACKEND_PROJECT_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONARQUBE_LOGIN}

build-backend:
  stage: build
  rules:
    - changes:
        - backend/*
  needs:
    - spotbugs-sast
    - sonarqube-backend
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd backend
    - >
      docker build
      --build-arg VERSION=${VERSION}
      --tag $CI_REGISTRY_IMAGE/sausage-backend:$VERSION
      .
    - docker push $CI_REGISTRY_IMAGE/sausage-backend:$VERSION

slack-notification-backend:
  stage: notify
  needs:
    - build-backend
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /\[notify]/
      changes:
        - backend/*
  script:
    - 'curl --request POST --header "Content-type: application/json" --data "$BACKEND_NOTIFICATION_DATA" "$WEBHOOK_URL"'

backend-deploy:
  stage: deploy
  needs:
    - build-backend
  image: argoproj/argocd:v2.3.3
  rules:
    - changes:
        - backend/*
  script:
    - argocd --grpc-web --auth-token $ARGO_TOKEN --server $ARGO_SERVER app set sausage-store-std-011-009 -p backend.image.tag=$VERSION
