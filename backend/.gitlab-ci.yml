include:
  - template: Security/SAST.gitlab-ci.yml

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}
  M2_REPO: ${CI_PROJECT_DIR}/.m2/repository
  BACKEND_ARTIFACTS_URL: ${NEXUS_REPO_URL}/sausage-store-pronin-konstantin-backend/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar
  BACKEND_NOTIFICATION_DATA: |
    {
      "message": "Backend #${VERSION} is ready, [download artifacts](${BACKEND_ARTIFACTS_URL})."
    }

stages:
  - build
  - test
  - upload
  - notify
  - deploy

cache:
  paths:
    - ${M2_REPO}

build-backend:
  stage: build
  rules:
    - changes:
        - backend/*
  script:
    - cd backend
    - mvn -Dmaven.repo.local=${M2_REPO} -Dversion.application=${VERSION} package
  artifacts:
    paths:
      - backend/target/sausage-store-${VERSION}.jar

spotbugs-sast:
  stage: test
  rules:
    - changes:
        - backend/*
  variables:
    COMPILE: "false"
    SAST_JAVA_VERSION: 16
    MAVEN_REPO_PATH: ${M2_REPO}
  needs:
    - build-backend

sonarqube-backend:
  stage: test
  rules:
    - changes:
        - backend/*
  image: maven:3.8-openjdk-16
  script:
    - cd backend
    - >
      mvn verify sonar:sonar 
      -Dsonar.qualitygate.wait=true
      -Dsonar.projectName=${SONAR_BACKEND_PROJECT_KEY}
      -Dsonar.projectKey=${SONAR_BACKEND_PROJECT_KEY}
      -Dsonar.host.url=${SONARQUBE_URL}
      -Dsonar.login=${SONARQUBE_LOGIN}

upload-backend:
  stage: upload
  needs:
    - build-backend
  rules:
    - changes:
        - backend/*
  script:
    - cd backend
    - mvn -Dmaven.repo.local=${M2_REPO} -Dversion.application=${VERSION} -DskipTests -Dmaven.install.skip=true -s settings.xml deploy

slack-notification-backend:
  stage: notify
  needs:
    - upload-backend
  rules:
    - if: $CI_COMMIT_MESSAGE =~ /\[notify]/
      changes:
        - backend/*
  script:
    - 'curl --request POST --header "Content-type: application/json" --data "$BACKEND_NOTIFICATION_DATA" "$WEBHOOK_URL"'

backend-deploy:
  stage: deploy
  needs:
    - upload-backend
  rules:
    - when: manual
  before_script:
    - "command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 600 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - scp ./backend/sausage-store-backend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-backend.service
    - ssh ${DEV_USER}@${DEV_HOST} "export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}"; export "ARTIFACTS_URL=${BACKEND_ARTIFACTS_URL}"; setsid /bin/bash -s " < ./backend/deploy.sh
